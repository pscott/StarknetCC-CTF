import type { BlockNumber } from '../types';
import { BigNumberish } from '../utils/number';
/**
 *
 * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L148-L153)
 *
 * @param hashValue
 * @param hashField
 */
export declare function formatHash(hashValue: BigNumberish): string;
/**
 *
 * [Reference](https://github.com/starkware-libs/cairo-lang/blob/fc97bdd8322a7df043c87c371634b26c15ed6cee/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py#L156-L161)
 * @param txHash
 * @param txId
 */
export declare function txIdentifier(txHash?: BigNumberish, txId?: BigNumberish): string;
export declare type BlockIdentifier = BlockNumber | BigNumberish;
export declare class Block {
    hash: BlockIdentifier;
    number: BlockIdentifier;
    tag: BlockIdentifier;
    private setIdentifier;
    constructor(_identifier: BlockIdentifier);
    get queryIdentifier(): any;
    get identifier(): any;
    set identifier(_identifier: BlockIdentifier);
    valueOf: () => BlockIdentifier;
    toString: () => BlockIdentifier;
}
